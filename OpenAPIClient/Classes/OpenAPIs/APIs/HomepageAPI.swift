//
// HomepageAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class HomepageAPI {

    /**
     Get instance custom homepage
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func apiV1CustomPagesHomepageInstanceGet(apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CustomHomepage?, _ error: Error?) -> Void)) -> RequestTask {
        return apiV1CustomPagesHomepageInstanceGetWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get instance custom homepage
     - GET /api/v1/custom-pages/homepage/instance
     - returns: RequestBuilder<CustomHomepage> 
     */
    open class func apiV1CustomPagesHomepageInstanceGetWithRequestBuilder() -> RequestBuilder<CustomHomepage> {
        let localVariablePath = "/api/v1/custom-pages/homepage/instance"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CustomHomepage>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Set instance custom homepage
     
     - parameter apiV1CustomPagesHomepageInstancePutRequest: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func apiV1CustomPagesHomepageInstancePut(apiV1CustomPagesHomepageInstancePutRequest: ApiV1CustomPagesHomepageInstancePutRequest? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) -> RequestTask {
        return apiV1CustomPagesHomepageInstancePutWithRequestBuilder(apiV1CustomPagesHomepageInstancePutRequest: apiV1CustomPagesHomepageInstancePutRequest).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Set instance custom homepage
     - PUT /api/v1/custom-pages/homepage/instance
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - parameter apiV1CustomPagesHomepageInstancePutRequest: (body)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func apiV1CustomPagesHomepageInstancePutWithRequestBuilder(apiV1CustomPagesHomepageInstancePutRequest: ApiV1CustomPagesHomepageInstancePutRequest? = nil) -> RequestBuilder<Void> {
        let localVariablePath = "/api/v1/custom-pages/homepage/instance"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: apiV1CustomPagesHomepageInstancePutRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
