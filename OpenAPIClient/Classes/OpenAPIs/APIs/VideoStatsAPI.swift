//
// VideoStatsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class VideoStatsAPI {

    /**
     Get overall stats of a video
     
     - parameter id: (path) The object id, uuid or short uuid 
     - parameter startDate: (query) Filter stats by start date (optional)
     - parameter endDate: (query) Filter stats by end date (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func apiV1VideosIdStatsOverallGet(id: ApiV1VideosOwnershipIdAcceptPostIdParameter, startDate: Date? = nil, endDate: Date? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: VideoStatsOverall?, _ error: Error?) -> Void)) -> RequestTask {
        return apiV1VideosIdStatsOverallGetWithRequestBuilder(id: id, startDate: startDate, endDate: endDate).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get overall stats of a video
     - GET /api/v1/videos/{id}/stats/overall
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - parameter id: (path) The object id, uuid or short uuid 
     - parameter startDate: (query) Filter stats by start date (optional)
     - parameter endDate: (query) Filter stats by end date (optional)
     - returns: RequestBuilder<VideoStatsOverall> 
     */
    open class func apiV1VideosIdStatsOverallGetWithRequestBuilder(id: ApiV1VideosOwnershipIdAcceptPostIdParameter, startDate: Date? = nil, endDate: Date? = nil) -> RequestBuilder<VideoStatsOverall> {
        var localVariablePath = "/api/v1/videos/{id}/stats/overall"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "startDate": (wrappedValue: startDate?.encodeToJSON(), isExplode: true),
            "endDate": (wrappedValue: endDate?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<VideoStatsOverall>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get retention stats of a video
     
     - parameter id: (path) The object id, uuid or short uuid 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func apiV1VideosIdStatsRetentionGet(id: ApiV1VideosOwnershipIdAcceptPostIdParameter, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: VideoStatsRetention?, _ error: Error?) -> Void)) -> RequestTask {
        return apiV1VideosIdStatsRetentionGetWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get retention stats of a video
     - GET /api/v1/videos/{id}/stats/retention
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - parameter id: (path) The object id, uuid or short uuid 
     - returns: RequestBuilder<VideoStatsRetention> 
     */
    open class func apiV1VideosIdStatsRetentionGetWithRequestBuilder(id: ApiV1VideosOwnershipIdAcceptPostIdParameter) -> RequestBuilder<VideoStatsRetention> {
        var localVariablePath = "/api/v1/videos/{id}/stats/retention"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<VideoStatsRetention>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter metric
     */
    public enum Metric_apiV1VideosIdStatsTimeseriesMetricGet: String, CaseIterable {
        case viewers = "viewers"
        case aggregatewatchtime = "aggregateWatchTime"
    }

    /**
     Get timeserie stats of a video
     
     - parameter id: (path) The object id, uuid or short uuid 
     - parameter metric: (path) The metric to get 
     - parameter startDate: (query) Filter stats by start date (optional)
     - parameter endDate: (query) Filter stats by end date (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func apiV1VideosIdStatsTimeseriesMetricGet(id: ApiV1VideosOwnershipIdAcceptPostIdParameter, metric: Metric_apiV1VideosIdStatsTimeseriesMetricGet, startDate: Date? = nil, endDate: Date? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: VideoStatsTimeserie?, _ error: Error?) -> Void)) -> RequestTask {
        return apiV1VideosIdStatsTimeseriesMetricGetWithRequestBuilder(id: id, metric: metric, startDate: startDate, endDate: endDate).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get timeserie stats of a video
     - GET /api/v1/videos/{id}/stats/timeseries/{metric}
     - OAuth:
       - type: oauth2
       - name: OAuth2
     - parameter id: (path) The object id, uuid or short uuid 
     - parameter metric: (path) The metric to get 
     - parameter startDate: (query) Filter stats by start date (optional)
     - parameter endDate: (query) Filter stats by end date (optional)
     - returns: RequestBuilder<VideoStatsTimeserie> 
     */
    open class func apiV1VideosIdStatsTimeseriesMetricGetWithRequestBuilder(id: ApiV1VideosOwnershipIdAcceptPostIdParameter, metric: Metric_apiV1VideosIdStatsTimeseriesMetricGet, startDate: Date? = nil, endDate: Date? = nil) -> RequestBuilder<VideoStatsTimeserie> {
        var localVariablePath = "/api/v1/videos/{id}/stats/timeseries/{metric}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let metricPreEscape = "\(metric.rawValue)"
        let metricPostEscape = metricPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{metric}", with: metricPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "startDate": (wrappedValue: startDate?.encodeToJSON(), isExplode: true),
            "endDate": (wrappedValue: endDate?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<VideoStatsTimeserie>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
