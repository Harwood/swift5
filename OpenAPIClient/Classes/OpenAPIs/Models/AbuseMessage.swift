//
// AbuseMessage.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AbuseMessage: Codable, JSONEncodable, Hashable {

    static let idRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let messageRule = StringRule(minLength: 2, maxLength: 3000, pattern: nil)
    public var id: Int?
    public var message: String?
    public var byModerator: Bool?
    public var createdAt: Date?
    public var account: AccountSummary?

    public init(id: Int? = nil, message: String? = nil, byModerator: Bool? = nil, createdAt: Date? = nil, account: AccountSummary? = nil) {
        self.id = id
        self.message = message
        self.byModerator = byModerator
        self.createdAt = createdAt
        self.account = account
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case message
        case byModerator
        case createdAt
        case account
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(byModerator, forKey: .byModerator)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(account, forKey: .account)
    }
}

