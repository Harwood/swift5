//
// ApiV1AbusesPostRequestVideo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ApiV1AbusesPostRequestVideo: Codable, JSONEncodable, Hashable {

    static let idRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let startAtRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let endAtRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    public var id: Int?
    /** Timestamp in the video that marks the beginning of the report */
    public var startAt: Int?
    /** Timestamp in the video that marks the ending of the report */
    public var endAt: Int?

    public init(id: Int? = nil, startAt: Int? = nil, endAt: Int? = nil) {
        self.id = id
        self.startAt = startAt
        self.endAt = endAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case startAt
        case endAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(startAt, forKey: .startAt)
        try container.encodeIfPresent(endAt, forKey: .endAt)
    }
}

